<?php
/**
 * @file islandora_bioinformatics.module
 */
error_reporting(E_ALL);
ini_set('display_errors', TRUE);
ini_set('display_startup_errors', TRUE);

// CModels
module_load_include('inc', 'islandora_bioinformatics', 'includes/cmodel_helper_functions');

// Islandora hook implementations
module_load_include('inc', 'islandora_bioinformatics', 'includes/hook_view_object');
module_load_include('inc', 'islandora_bioinformatics', 'includes/hook_ingest_steps');

// Access
module_load_include('inc', 'islandora_bioinformatics', 'includes/access_callbacks');

// Drupal Forms
module_load_include('inc', 'islandora_bioinformatics', 'forms/related_objects.form');
module_load_include('inc', 'islandora_bioinformatics', 'forms/project_assign_person.form');

// Page Callbacks
module_load_include('inc', 'islandora_bioinformatics', 'includes/page_callbacks');

/**
 * Implements hook_menu()
 *
 * # RELATED CONTENT
 * These are default URLs for displaying and managing related content.
 *
 * ## islandora/object/%islandora_object/related_content
 * A tab which displays content related to the %islandora_object.
 *
 * ## islandora/object/%islandora_object/related_content/add/%islandora_cmodel
 * Provides a UI to allow users to create a relationship between an existing object
 * of type %islandora_cmodel and the %islandora_object.
 *
 * ## islandora/object/%islandora_object/related_content/ingest/%islandora_cmodel
 * Begins the ingestion process for an object of type %islandora_cmodel, which
 * will have a relationship towards the %islandora_object.
 *
 * # MNPL
 * These are custom URLs for the MNPL website.
 *
 * ## islandora/object/%islandora_object/people
 * A tab which displays a list of people related to an object.
 */
function islandora_bioinformatics_menu(){
  $urls = array();

  // Default Functionality
  $urls['islandora/object/%islandora_object/related_content'] = array(
    'title' => 'Related Content',
    'page callback' => 'islandora_related_objects_page',
    'page arguments' => array(2),
    'access callback' => 'islandora_related_objects_page_access',
    'access arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
  );

  $urls['islandora/object/%islandora_object/related_content/add/%islandora_cmodel'] = array(
    'title callback' => 'islandora_cmodel_action_title',
    'title arguments' => array('Add', 5),
    'page callback' => 'islandora_related_objects_add_callback',
    'page arguments' => array(2, 5),
    'access callback' => 'islandora_object_access',
    'access arguments' => array(ISLANDORA_METADATA_EDIT, 2),
    'type' => MENU_CALLBACK,
  );

  $urls['islandora/object/%islandora_object/related_content/ingest/%islandora_cmodel'] = array(
    'title callback' => 'islandora_cmodel_action_title',
    'title arguments' => array('Ingest', 5),
    'page callback' => 'islandora_related_objects_ingest_callback',
    'page arguments' => array(2, 5),
    'access callback' => 'islandora_object_access',
    'access arguments' => array(ISLANDORA_INGEST, 2),
    'type' => MENU_CALLBACK,
  );

  // Custom Tab
  $urls['islandora/object/%islandora_object/people'] = array(
    'title' => 'People',
    'type' => MENU_LOCAL_TASK,
    'description' => 'People assigned to this project.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_related_objects_form', 2, 'islandora:person_cmodel'),
    'access callback' => 'islandora_related_people_access',
    'access arguments' => array(array(ISLANDORA_VIEW_OBJECTS), 2),
  );

  $urls['tests'] = array(
    'title' => 'Ros',
    'type' => MENU_CALLBACK,
    'page callback' => 'test_page_callback',
    'access callback' => true,
  );

  return $urls;
}

function test_page_callback(){
  $object = 'islandora:93';
  $cmodels = array('islandora:sponge_cmodel');
  $relationships = array('isPartOf');
//  ros($object, $cmodels, $relationships);
  return '';
}

/**
 * islandora_cmodel_action_title
 *
 * @param $action
 * @param $cmodel
 *
 * @return string
 *
 * Generates a page title given an 'action' and a 'cmodel'.
 *
 * For example:
 *
 *    Add Specimen
 *    Ingest Project
 */
function islandora_cmodel_action_title($action, $cmodel){
  return "{$action} {$cmodel->label}";
}

/**
 * Implements hook_theme()
 *
 * # MNPL
 *  1. islandora_lab_object
 *  2. islandora_project
 *  3. islandora_person
 *
 * # RELATED CONTENT
 *  1. cmodel
 */
function islandora_bioinformatics_theme($existing, $type, $theme, $path) {
  $themes = array();

  $themes['islandora_bioinformatics_lab_object'] = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/islandora-bioinformatics-lab-object',
    'variables' => array(
      'object' => NULL,
    ),
  );

  $themes['islandora_bioinformatics_project']    = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/islandora-bioinformatics-project',
    'variables' => array(
      'object' => NULL,
    ),
  );

  $themes['islandora_bioinformatics_person']     = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/islandora-bioinformatics-person',
    'variables' => array(
      'object' => NULL,
    ),
  );

  $themes['cmodel'] = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/cmodel',
    'variables' => array(
      'object' => NULL,
    ),
  );

  return $themes;
}

/**
 * Implements hook_islandora_required_objects()
 *
 * MNPL
 *
 *  Content Models
 *    1. Lab Object
 *    2. Person
 *    3. Project
 *
 *  Collections
 *    1. Lab Objects
 *    2. Persons
 *    3. Projects
 */
function islandora_bioinformatics_islandora_required_objects(IslandoraTuque  $connection) {
  $module_path = drupal_get_path('module', 'islandora_bioinformatics');

  $objects = array();

  // Constructing CModels
  //                                      PID                               LABEL       DS-COMPOSITE-MODEL PATH
  $lab_object = islandora_cmodel_create('islandora:lab_object_cmodel',  'Lab Object', "$module_path/xml/cmodels/lab_object_dscm.xml");
  $project    = islandora_cmodel_create('islandora:project_cmodel',     'Project',    "$module_path/xml/cmodels/project_dscm.xml");
  $person     = islandora_cmodel_create('islandora:person_cmodel',      'Person',     "$module_path/xml/cmodels/person_dscm.xml");

  // CModel: person isMemberOf project
  islandora_cmodel_add_relationship($person, FEDORA_RELS_EXT_URI, 'isMemberOf', $project->id, FALSE);

  $objects[] = $lab_object;
  $objects[] = $project;
  $objects[] = $person;

  // Collections
  $collections = array(
    'person_collection'     => array('parent' => 'islandora:root', 'label' => 'People'),
    'project_collection'    => array('parent' => 'islandora:root', 'label' => 'Projects'),
    'lab_object_collection' => array('parent' => 'islandora:root', 'label' => 'Lab Objects'),
  );

  foreach($collections as $pid => $details){
    // Construct the Fedora Object.
    $collection = $connection->repository->constructObject('islandora:' . $pid);
    $collection->owner = 'fedoraAdmin';
    $collection->label = $details['label'];
    $collection->models = 'islandora:collectionCModel';
    $collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', $details['parent']);

    // Create the COLLECTION_POLICY datastream
    $collection_policy = $collection->constructDatastream ('COLLECTION_POLICY', 'X');
    $collection_policy->mimetype = 'text/xml';
    $collection_policy->setContentFromFile("$module_path/xml/collections/{$pid}_policy.xml", FALSE);

    // Ingest the datastream
    $collection->ingestDatastream($collection_policy);

    // Add collection to the list of objects.
    $objects[] = $collection;
  }

  return array(
    'islandora_bioinformatics' => array(
      'title' => 'Islandora Bioinformatics',
      'objects' => $objects,
    )
  );
}


/**
 * Implements hook_islandora_xml_form_builder_forms()
 *
 * # MNPL - MADS Forms
 *
 *    1. Person MADS Form
 *    2. Project MADS Form
 */
function islandora_bioinformatics_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_bioinformatics');

  // Person Forms
  $fb_forms['Person MADS Form'] = array(
    'form_file' => "$module_path/xml/forms/person_mads_form.xml",
  );

  // Project Forms
  $fb_forms['Project MADS Form'] = array(
    'form_file' => "$module_path/xml/forms/project_mads_form.xml",
  );


  /** @todo Person EML form. */
  /** @todo Person MADS to EML XSLT. */
  /** @todo Project EML form. */
  /** @todo Project MADS to EML XSLT. */

  return $fb_forms;
}

/**
 * Implements hook_islandora_xml_form_builder_form_associations()
 *
 * MNPL
 *
 *   |      CONTENT MODEL        |      FORM BUILDER FORM  |
 *   |-----------------------------------------------------|
 *   | islandora:person_cmodel   |      Person MADS Form   |
 *   | islanodra:project_cmodel  |      Project MADS Form  |
 *
 *
 */
function islandora_bioinformatics_islandora_xml_form_builder_form_associations() {
  $module_path = drupal_get_path('module', 'islandora_bioinformatics');

  $form_associations['islandora_bioinformatics_person_mads'] = array(
    'content_model' => 'islandora:person_cmodel',
    'form_name' => 'Person MADS Form',
    'dsid' => 'MADS',
    'title_field' => array('authority', 'titleInfo', 'title'),
    'transform' => 'No Transform',
    'template' => '',
  );

  $form_associations['islandora_bioinformatics_project_mads'] = array(
    'content_model' => 'islandora:project_cmodel',
    'form_name' => 'Project MADS Form',
    'dsid' => 'MADS',
    'title_field' => array('authority', 'titleInfo', 'title'),
    'transform' => 'No Transform',
    'template' => '',
  );

  return $form_associations;
}

//
/**
 * Implements hook_islandora_object_alter
 *
 * SUBTYPING - Required
 *
 * This function creates a fedora:hasModel relationship between the $object
 * and all of it's CModel's supertypes. Should not be run for CModels.
 */
function islandora_bioinformatics_islandora_object_alter($object, array &$context) {
  $object_is_cmodel = $object->relationships->get(FEDORA_MODEL_URI, 'hasModel', 'fedora-system:ContentModel-3.0');
  if(!$object_is_cmodel){

    // Parent CModel
    // Don't use the islandora_object_parent_model function. It only works for
    // objects that have been fully ingested.
    $cmodel_id = $object->models[0];

    // Merges the object's models with
    $models = array_merge($object->models, islandora_cmodel_supertypes($cmodel_id));
    $object->models = $models;

    // Creates a hasParentModel relationship towards the CModel initially chosen.
    $object->relationships->add(ISLANDORA_MODEL_URI, 'hasParentModel', $cmodel_id);
  }
}


/**
 * Implements hook_islandora_OBJECT_CMODEL_related_objects_page_alter()
 *
 * Where OBJECT_CMODEL = islandora:project_cmodel
 *
 * # MNPL
 *
 * Altering the Related Content page for Project's to exclude relationships
 * towards the Person CModel.
 */
function islandora_bioinformatics_islandora_islandora_project_cmodel_related_objects_page_alter(&$page, &$page_state){
  $count = 0;

  // Find and iterate through all relationships.
  foreach($page_state['relationships'] as $rel){
    // Remove relationships if the object is a person.
    if($rel['object']['value'] == 'islandora:person_cmodel') {
      unset($page_state['relationships'][$count]);
    }
    $count++;
  }
}

/**
 * Implements hook_form_islandora_related_objects_form_alter()
 *
 * RELATED CONTENT - Required.
 *
 * Dynamically calls three hooks for altering a related content form:
 *
 *  1. form_islandora_OBJECT_CMODEL_related_objects_form
 *  2. form_islandora_related_RELATED_CMODEL_objects_form
 *  3. form_islandora_OBJECT_CMODEL_related_RELATED_CMODEL_objects_formo
 *
 * Each of these hooks are inherited. So if A is a supertype of B then
 * 'hook_form_islandora_A_related_objects_form_alter()' will also affect
 * the form for B.
 */
function islandora_bioinformatics_form_islandora_related_objects_form_alter(&$form, &$formstate){
  $hooks = array();

  // Object
  $object = islandora_object_load($formstate['islandora']['object']);

  // Related CModel
  $related_cmodel_id = $formstate['islandora']['cmodel'];

  // {Related CModel} UNION {Related CModel Supertypes}
  $related_cmodel_types = array_merge(array($related_cmodel_id),
                                      islandora_cmodel_supertypes($related_cmodel_id));


  $rcm_count = 0;
  foreach($related_cmodel_types as $rcm){
    // Replace : with _ for hook name generation.
    $rcm_str_replaced  = str_replace(':', '_', $rcm);

    // Replace it in the array of Related CModel Types
    $related_cmodel_types[$rcm_count] = $rcm_str_replaced;

    // Hook function string.
    $hooks[] = "form_islandora_related_{$rcm_str_replaced}_objects_form";
    $rcm_count++;
  }

  // Remove the FedoraObject-3.0 from the list of the Object's CModels.
  $object_models = array_diff($object->models, array('fedora-system:FedoraObject-3.0'));

  // Iterate through the Object's CModels.
  foreach($object_models as $ocm){
    // Replate : with _ for hook name generation.
    $object_cmodel = str_replace(':', '_', $ocm);

    $hooks[] = "form_islandora_{$object_cmodel}_related_objects_form";

    foreach($related_cmodel_types as $rcm){
      $hooks[] = "form_islandora_{$object_cmodel}_related_{$rcm}_objects_form";
    }
  }

  // Alter forms.
  drupal_alter($hooks, $form, $formstate);
}

/**
 * Implements hook_form_FORM_ID_alter()
 *
 * WHERE  FORM_ID         = "islandora_related_RELATED_CMODEL_objects_form"
 * AND    RELATED_CMODEL  = "islandora:person_cmodel"
 */
function islandora_bioinformatics_form_islandora_related_islandora_person_cmodel_objects_form_alter(&$form, &$form_state) {
  module_load_include('inc', 'islandora_bioinformatics', 'includes/mads_to_array');

  $object = $form_state['islandora']['object'] ? $form_state['islandora']['object'] : null;
  $people = $form_state['islandora']['related_objects'] ? $form_state['islandora']['related_objects'] : array();

  $header = array(
    'name' => t('Name'),
    'phone' => t('Phone Number'),
    'email' => t('Email'),
  );

  $form['cmodel']['#markup'] = 'People';

  $form['ingest'] = array();

  $people_entries = array();

  foreach ($people as $person) {
    // Default Values
    if (!isset($person['MADS'])) break;

    $person_mads = person_mads_to_array($person);
    $person_id = $person->id;

    $name = $person_mads['name']['first'] . ' ' . $person_mads['name']['last'];

    $people_entries[$person_id] = array(
      'name' => l($name, "islandora/object/$person_id"),
      'phone' => $person_mads['contact']['phone'],
      'email' => $person_mads['contact']['email'],
    );
  }

  $form['table']['#header'] = $header;
  $form['table']['#options'] = $people_entries;
  $form['table']['#empty'] = t('There is no people related to ' . $object->id . '.');

  return $form;
}
