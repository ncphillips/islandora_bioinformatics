<?php
/**
 * @file islandora_bioinformatics.module
 */
error_reporting(E_ALL);
ini_set('display_errors',  TRUE);
ini_set('display_startup_errors',  TRUE);



// Islandora hook implementations
module_load_include('inc',  'islandora_bioinformatics',  'includes/hook_view_object');
module_load_include('inc',  'islandora_bioinformatics',  'includes/hook_ingest_steps');

// Access
module_load_include('inc',  'islandora_bioinformatics',  'includes/access_callbacks');

// Page Callbacks
module_load_include('inc',  'islandora_bioinformatics',  'includes/page_callbacks');

// Hook Form Alters
module_load_include('inc',  'islandora_bioinformatics',  'includes/hook_form_alters');
module_load_include('inc',  'islandora_bioinformatics',  'includes/hook_xml_form_builder_form_associations');


/**
 * Implements hook_menu()
 */
function islandora_bioinformatics_menu() {
  $urls = array();

  $rcm_path = drupal_get_path('module', 'islandora_related_content');

  $urls['islandora/object/%islandora_object/people'] = array(
    'title' => 'People',
    'type' => MENU_LOCAL_TASK,
    'description' => 'People assigned to this project.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_related_content_form',  2,  'islandora:person_cmodel', array('fedora' => array('isMemberOf',))),
    'access callback' => 'islandora_related_people_access',
    'access arguments' => array(array(ISLANDORA_VIEW_OBJECTS),  2),
  );

  return $urls;
}


/**
 * Implements hook_theme()
 */
function islandora_bioinformatics_theme($existing,  $type,  $theme,  $path) {
  $themes = array();

  // Person & Project
  $themes['islandora_bioinformatics_project']    = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/islandora-bioinformatics-project',
    'variables' => array('object' => NULL, ),
  );

  $themes['islandora_bioinformatics_person']     = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/islandora-bioinformatics-person',
    'variables' => array('object' => NULL, ),
  );

  // Lab Object
  $themes['islandora_bioinformatics_lab_object'] = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/islandora-bioinformatics-lab-object',
    'variables' => array('object' => NULL, ),
  );

  // Specimen
  $themes['islandora_bioinformatics_specimen'] = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/islandora-bioinformatics-specimen',
    'pattern' => 'islandora_specimen__',
    'variables' => array('islandora_object' => NULL),
  );

  // Fraction
  $themes['islandora_bioinformatics_fraction'] = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/islandora-bioinformatics-fraction',
    'pattern' => 'islandora_bioinformatics_fraction__',
    'variables' => array('islandora_object' => NULL),
  );

  $themes['islandora_bioinformatics_fraction_table'] = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/islandora-bioinformatics-fraction-table',
    'pattern' => 'islandora_bioinformatics_fraction_table__',
    'variables' => array('islandora_objects' => NULL),
  );

  $themes['islandora_bioinformatics_lcms'] = array(
    'file' => 'theme/theme.inc',
    'template' => 'theme/islandora-bioinformatics-lcms',
    'pattern' => 'islandora_bioinformatics_lcms__',
    'variables' => array('islandora_object' => NULL),
  );

  return $themes;
}

/**
 * Implements hook_islandora_required_objects()
 */
function islandora_bioinformatics_islandora_required_objects(IslandoraTuque  $connection) {
  $module_path = drupal_get_path('module',  'islandora_bioinformatics');

  $objects = array();

  $cm = array();

  // Person
  $cm['Person'] = array(
    '#dscm' => true,
    '#relationships' => array(
      FEDORA_RELS_EXT_URI => array(
        'isMemberOf' => array(
          'islandora:project_cmodel',
        ),
      )
    ),
  );
  // Project
  $cm['Project'] = array(
    '#dscm' => true,
  );
  // Specimen
  $cm['Specimen'] = array(
    '#dscm' => true,
    '#relationships' => array(
      FEDORA_RELS_EXT_URI => array(
        'isMemberOf' => array(
          'islandora:project_cmodel',
        ),
      ),
    ),
  );
  // Microbe
  $cm['Microbe'] = array(
    '#parent' => 'islandora:specimen_cmodel',
    '#relationships' => array(
    ),
  );
  // Invertebrate
  $cm['Invertebrate'] = $cm['Microbe'];
  // Assay Runs
  $cm['Assay Run'] = array(
    '#dscm' => true,
  );
  $cm['Fraction Run'] = array(
    '#parent' => 'islandora:assay_run_cmodel',
    '#relationships' => array(
      FEDORA_RELS_EXT_URI => array(
        'isMetadataFor' => array(
          'islandora:specimen_cmodel',
        ),
      ),
    ),
  );
  $cm['Compound Run'] = $cm['Fraction Run'];
  $cm['LCMS'] = array(
    '#relationships' => array(
      FEDORA_RELS_EXT_URI => array(
        'isMetadataFor' => array(
          'islandora:assay_run_cmodel',
        ),
      ),
    )
  );
  // Assay Protocol
  $cm['Assay Run Protocol'] = array(
    '#dscm' => true,
  );
  $cm['Fraction Run Protocol'] = array('#parent' => 'islandora:assay_run_protocol_cmodel');
  $cm['Compound Run Protocol'] = array('#parent' => 'islandora:assay_run_protocol_cmodel');
  // Genesequence
  $cm['Genesequence'] = array(
    '#relationships' => array(
      FEDORA_RELS_EXT_URI => array(
        'isMetadataFor' => array(
          'islandora:microbe_cmodel',
        ),
      ),
    )
  );

  foreach($cm as $label => $a){
    $safe = strtolower(str_replace(' ', '_', $label));
    $cmid = 'islandora:'.$safe.'_cmodel';

    $parent = '';
    if(in_array('#parent', array_keys($a))){
      $parent = $a['#parent'];
    }

    if (!empty($a['#dscm']) and $a['#dscm']){
      $dscm_path = $module_path . '/xml/cmodels/' .$safe. '_dscm.xml';
    }
    else {
      $dscm_path = '';
    }

    $object = islandora_cmodel_create($cmid, $label, $dscm_path, $parent);
    if(!empty($a['#relationships'])){
      foreach($a['#relationships'] as $ns => $rels){
        foreach($rels as $rel => $targets){
          foreach($targets as $target){
            $object->relationships->add($ns, $rel, $target);
          }
        }
      }
    }
    $objects[] = $object;

  }

  // Collections Info
  $collections = array(
    'person_collection'       => array('parent' => 'islandora:root',                   'label' => 'People'),
    'project_collection'      => array('parent' => 'islandora:root',                   'label' => 'Projects'),
    'protocol_collection'     => array('parent' => 'islandora:root',                   'label' => 'Protocols'),
      'compound_run_protocol_collection' => array('parent' => 'islandora:protocol_collection',    'label' => 'Compound Run Protocols'),
      'fraction_run_protocol_collection' => array('parent' => 'islandora:protocol_collection',    'label' => 'Fraction Run Protocols'),
    'genesequence_collection' => array('parent' => 'islandora:root',  'label' => 'Genesequences'),
    'specimen_collection'     => array('parent' => 'islandora:root',  'label' => 'Specimen Collection'),
      'microbe_collection'      => array('parent' => 'islandora:specimen_collection',    'label' => 'Microbes'),
      'invertebrate_collection' => array('parent' => 'islandora:specimen_collection',    'label' => 'Invertebrates'),
          'algae_collection'        => array('parent' => 'islandora:invertebrate_collection','label' => 'Algae'),
          'coral_collection'        => array('parent' => 'islandora:invertebrate_collection','label' => 'Coral'),
          'sponge_collection'       => array('parent' => 'islandora:invertebrate_collection','label' => 'Sponges'),
          'tunicate_collection'     => array('parent' => 'islandora:invertebrate_collection','label' => 'Tunicates'),
  );

  // Create Objects
  foreach($collections as $pid => $details) {
    // Construct the Fedora Object.
    $collection = $connection->repository->constructObject('islandora:' . $pid);
    $collection->owner = 'fedoraAdmin';
    $collection->label = $details['label'];
    $collection->models = 'islandora:collectionCModel';
    $collection->relationships->add(FEDORA_RELS_EXT_URI,  'isMemberOfCollection',  $details['parent']);

    // Create the COLLECTION_POLICY datastream
    $collection_policy = $collection->constructDatastream ('COLLECTION_POLICY',  'X');
    $collection_policy->mimetype = 'text/xml';
    $collection_policy->setContentFromFile("$module_path/xml/collections/{$pid}_policy.xml",  FALSE);

    // Ingest the datastream
    $collection->ingestDatastream($collection_policy);

    // Add collection to the list of objects.
    $objects[] = $collection;
  }

  return array(
    'islandora_bioinformatics' => array(
      'title' => 'Islandora Bioinformatics',
      'objects' => $objects,
    )
  );
}


/**
 * Implements hook_islandora_xml_form_builder_forms()
 */
function islandora_bioinformatics_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module',  'islandora_bioinformatics');

  // Person Forms
  $fb_forms = array(

    'Person MADS Form' => array(
      'form_file' => "$module_path/xml/forms/person_mads_form.xml",
    ),

    'Project MADS Form' => array(
      'form_file' => "$module_path/xml/forms/project_mads_form.xml",
    ),

    'Specimen EML Form' => array(
      'form_file' => "$module_path/xml/forms/specimen_eml_form.xml"
    ),
    // The next two use the same form as the Specimen, but I still made the
    // form ID's incase we ever want to change those forms in the future.
    'Microbe EML Form' => array(
      'form_file' => "$module_path/xml/forms/specimen_eml_form.xml",
    ),

    'Invertebrate EML Form' => array(
      'form_file' => "$module_path/xml/forms/specimen_eml_form.xml"
    ),

    // These two forms are identical. Same thing as the Specimen/Microbe/Invert.
    'Compound Run Form' => array(
      'form_file' => "$module_path/xml/forms/assay_run_form.xml"
    ),
    'Fraction Run Form' => array(
      'form_file' => "$module_path/xml/forms/assay_run_form.xml"
    ),

    'LCMS Form' => array(
      'form_file' => "$module_path/xml/forms/lcms_form.xml",
    ),

    'Fraction Run Protocol Form' => array(
      'form_file' => "$module_path/xml/forms/assay_run_protocol_form.xml",
    ),

    'Compound Run Protocol Form' => array(
      'form_file' => "$module_path/xml/forms/assay_run_protocol_form.xml",
    ),

    'Genesequence Form' => array(
      'form_file' => "$module_path/xml/forms/genesequence_form.xml",
    )
  );

  return $fb_forms;
}


/**
 * Implements hook_islandora_OBJECT_CMODEL_related_content_page_alter()
 *
 * Where OBJECT_CMODEL = islandora:project_cmodel
 *
 * # MNPL
 *
 * Altering the Related Content page for Project's to exclude relationships
 * towards the Person CModel.
 */
function islandora_bioinformatics_islandora_islandora_project_cmodel_related_content_page_alter(&$page,  &$page_state) {
  $count = 0;

  // Find and iterate through all relationships.
  foreach($page_state['relationships'] as $rel) {
    // Remove relationships if the object is a person.
    // This is verbose because I was an idiot while testing. No worries.
    $sub = $rel['subject']['value'];
    $obj = $rel['object']['value'];
    $sub_is_person = $sub == 'islandora:person_cmodel';
    $obj_is_person = $obj == 'islandora:person_cmodel';
    if($sub_is_person or $obj_is_person) {
      unset($page_state['relationships'][$count]);
    }
    $count++;
  }
}





